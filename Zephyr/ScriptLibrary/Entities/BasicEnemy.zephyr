MemberVariables
{
	Entity entity = null;		
	Entity target = null;
	Number maxChaseDist = 4;
	Number lowHealthThreshhold = 1;
	Number speed = 3;
}
	

State Wander
{
	Vec2 targetPosition;

	// Callback from CheckForTarget
	TargetFound( Entity target )
	{
		this.target = target;

		if( this.entity.health <= this.lowHealthThreshhold )
		{
			ChangeState( Flee )
		}
		else
		{
			ChangeState( Chase )
		}
	}

	Enter()
	{
		targetPosition = GetNewWanderTargetPosition() // C++ event
	}

	Update()
	{
		if( this.entity.position == targetPosition )
		{
			targetPosition = GetNewWanderTargetPosition()
		}

		CheckForTarget() // C++ event
		
		MoveToPosition( pos: targetPosition
						speed: this.speed )
	}
}

State Chase
{
	Update()
	{
		if( DistanceBetweenEntities( this.entity, this.target ) > this.maxChaseDist )
		{
			this.target = null;
			ChangeState( Wander )
		}

		MoveTowardsTarget( target: this.target
						   speed: this.speed )
	}
}

State Flee
{
	Update()
	{
		if( DistanceBetweenEntities( this.entity, this.target ) > this.maxChaseDist )
		{
			this.target = null;
			ChangeState( Wander )
		}

		MoveAwayFromTarget( target: this.target
							speed: this.speed )
	}
}
