Vec2 position
Vec2 targetPosition
String targetName = "player"
Number health
Entity target = -1
Entity levelMgr = -1

Number maxChaseDist = 3

Vec2 lastPosition 
Number numFramesInSameSpace

Bool active = true
// -----------------------------------------------------------------------------------------
// Global events
// -----------------------------------------------------------------------------------------
Function Spawned( Number maxHealth, String mapName )
{
	health = maxHealth
	EnemySpawned( mapName: mapName )
	GetNewWanderTargetPosition()
}

Function HealthUpdated( Number newHealth)
{
	health = newHealth

	if( health == 1 )
	{
		ChangeSpriteAnimation( newAnim: "LowHealth" )
	}
}

Function Died( String mapName )
{
	EnemyDied( mapName: mapName )
}

Function PositionUpdated( Vec2 newPos )
{
	lastPosition = position
	position = newPos
}

Function TargetPositionUpdated( Vec2 newPos )
{
	targetPosition = newPos
}

Function SummonBlob( Vec2 newPos, Number testVal )
{
	targetPosition = newPos
	maxChaseDist = 99999
	testVal = 200
}

// Damage
Function CollisionEntered( Number attackDamage = 1, Entity otherEntity )
{
	if( otherEntity != null )
	{
		DamageEntity( target : otherEntity, damage: attackDamage, damageType: "normal" )
	}
}

// -----------------------------------------------------------------------------------------
// Wander
// -----------------------------------------------------------------------------------------
State Wander
{	
	Function TargetFound()
	{		
		ChangeState( Chase )
	}
		
	OnUpdate()
	{
		CheckForTarget( target: target, maxDist: 3 )
		MoveToLocation( pos: targetPosition )

		if( position == targetPosition )
		{
			GetNewWanderTargetPosition()
		}

		// Check for stuck on wall, find new position if stuck for a second
		if( lastPosition == position )
		{
			numFramesInSameSpace = numFramesInSameSpace + 1

			if( numFramesInSameSpace > 60 )
			{
				GetNewWanderTargetPosition()
			}
		}
		else
		{
			numFramesInSameSpace = 0
		}
	}
}

// -----------------------------------------------------------------------------------------
// Chase
// -----------------------------------------------------------------------------------------
State Chase
{
	Function DistanceToTargetUpdated( Number distance )
	{		
		if( distance > maxChaseDist )
		{
			GetNewWanderTargetPosition()
			ChangeState( Wander )
		}
	}

	OnUpdate()
	{
		if( health == 1 )
		{
			ChangeState( Flee )
		}
		
		GetDistanceToTarget( targetName: targetName )
		MoveToLocation( pos: target.curPosition )
	}
}

// -----------------------------------------------------------------------------------------
// Flee
// -----------------------------------------------------------------------------------------
State Flee
{
	Function DistanceToTargetUpdated( Number distance )
	{		
		if( distance > 5 )
		{
			GetNewWanderTargetPosition()
			ChangeState( Wander )
		}
	}

	//FireEvent( PrintDebugText( text = "Flee" ) );
	OnUpdate()
	{
		GetDistanceToTarget( targetName: targetName ) 
		FleeTargetEntity( targetName: targetName ) 
	}
}

// Number health = 4
// DoSomethingWithHealth( health, "fire", 1 )
// health = ?

// Function DoSomethingWithHealth( Number curHealth, String damageType, Number damage )
// {
// 	if( damageType == "fire" )
// 	{
// 		curHealth = curHealth - 1
// 	}
	
// 	// more code ...
// }