Vec2 position
Vec2 targetPosition
String targetName = "player"
Number health

Vec2 lastPosition 
Number numFramesInSameSpace

Bool active = true
// -----------------------------------------------------------------------------------------
// Global events
// -----------------------------------------------------------------------------------------
// TODO: reserve Spawn and Die as special events that the user can't fire 
Number maxHealth
String mapName
Function Spawned()
{
	health = maxHealth
	EnemySpawned( mapName = mapName )
	GetNewWanderTargetPosition()
}

Number newHealth
Function HealthUpdated()
{
	health = newHealth

	if( health == 1 )
	{
		ChangeSpriteAnimation( newAnim = "LowHealth" )
	}
}

Function Died()
{
	EnemyDied( mapName = mapName )
}

// TODO: Make this more intuitive
Vec2 newPos
Function PositionUpdated()
{
	lastPosition = position
	position = newPos
}

Function TargetPositionUpdated()
{
	targetPosition = newPos
}

// Damage
Number attackDamage = 1
Number otherEntityId = -1
Function CollisionEntered()
{
	if( otherEntityId != -1 )
	{
		DamageEntity( targetId = otherEntityId, damage = attackDamage, damageType = "normal" )
	}
}

// -----------------------------------------------------------------------------------------
// Wander
// -----------------------------------------------------------------------------------------
State Wander
{	
	Function TargetFound())
	{		
		ChangeState( Chase )
	}
	
	// FireEvent( PrintDebugText( text = "Wander" ) );
	
	OnUpdate()
	{
		CheckForTarget( targetName = targetName, maxDist = 3 )
		MoveToLocation( pos = targetPosition )

		if( position == targetPosition )
		{
			GetNewWanderTargetPosition()
		}

		// Check for stuck on wall, find new position if stuck for a second
		if( lastPosition == position )
		{
			numFramesInSameSpace = numFramesInSameSpace + 1

			if( numFramesInSameSpace > 60 )
			{
				GetNewWanderTargetPosition()
			}
		}
		else
		{
			numFramesInSameSpace = 0
		}
	}
}

// -----------------------------------------------------------------------------------------
// Chase
// -----------------------------------------------------------------------------------------
State Chase
{
	Number distance;
	OnEvent( DistanceToTargetUpdated )
	{		
		if( distance > 3 )
		{
			GetNewWanderTargetPosition()
			ChangeState( Wander )
		}
	}

	OnUpdate()
	{
		if( health == 1 )
		{
			ChangeState( Flee )
		}
		
		//FireEvent( PrintDebugText( text = "Chase" ) );

		GetDistanceToTarget( targetName = targetName )
		ChaseTargetEntity( targetName = targetName )
	}
}

// -----------------------------------------------------------------------------------------
// Flee
// -----------------------------------------------------------------------------------------
State Flee
{
	Number distance;
	OnEvent( DistanceToTargetUpdated )
	{		
		if( distance > 5 )
		{
			GetNewWanderTargetPosition()
			ChangeState( Wander )
		}
	}

	//FireEvent( PrintDebugText( text = "Flee" ) );
	OnUpdate()
	{
		GetDistanceToTarget( targetName = targetName ) 
		FleeTargetEntity( targetName = targetName ) 
	}
}
