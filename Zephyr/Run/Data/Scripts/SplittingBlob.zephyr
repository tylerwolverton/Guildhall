Vec2 position;		
Vec2 targetPosition;
String targetName = "player";
Number health;

String minionSpawnType;

Vec2 lastPosition;
Number numFramesInSameSpace;

// -----------------------------------------------------------------------------------------
// Global events
// -----------------------------------------------------------------------------------------
// TODO: reserve Spawn and Die as special events that the user can't fire 
Function Spawned( Number maxHealth, String mapName )
{
	health = maxHealth;
	EnemySpawned( mapName: mapName )
	GetNewWanderTargetPosition()
}

Function HealthUpdated( Number newHealth )
{
	health = newHealth;

	// Spawn minions on damage
	if( minionSpawnType != "" )
	{
		Vec2 posOffset = Vec2( .25, 0 );
		SpawnEntity( type: minionSpawnType, position: position + posOffset )
		SpawnEntity( type: minionSpawnType, position: position - posOffset )
	}
}

Function Died( String mapName )
{
	EnemyDied( mapName: mapName )
}

Function PositionUpdated( Vec2 newPos )
{
	lastPosition = position;
	position = newPos;
}

Function TargetPositionUpdated( Vec2 newPos )
{
	targetPosition = newPos;
}

// Damage
Function CollisionEntered( Number attackDamage = 1, Number otherEntityId )
{
	if( otherEntityId != -1 )
	{
		DamageEntity( targetId : otherEntityId, damage: attackDamage, damageType: "normal" )
	}
}

// -----------------------------------------------------------------------------------------
// Wander
// -----------------------------------------------------------------------------------------
State Wander
{	
	Function TargetFound()
	{		
		ChangeState( Chase );
	}
	
	OnUpdate()
	{
		CheckForTarget( targetName: targetName, maxDist: 3 )
		MoveToLocation( pos: targetPosition )

		if( position == targetPosition )
		{
			GetNewWanderTargetPosition()
		}

		// Check for stuck on wall, find new position if stuck for a second
		if( lastPosition == position )
		{
			numFramesInSameSpace = numFramesInSameSpace + 1;

			if( numFramesInSameSpace > 60 )
			{
				GetNewWanderTargetPosition()
			}
		}
		else
		{
			numFramesInSameSpace = 0;
		}
	}
}

// -----------------------------------------------------------------------------------------
// Chase
// -----------------------------------------------------------------------------------------
State Chase
{		
	//FireEvent( PrintDebugText( text = "Chase" ) );

	Function DistanceToTargetUpdated( Number distance )
	{		
		if( distance > 3 )
		{
			GetNewWanderTargetPosition()
			ChangeState( Wander );
		}
	}

	OnUpdate()
	{
		GetDistanceToTarget( targetName: targetName )
		ChaseTargetEntity( targetName: targetName )
	}
}
